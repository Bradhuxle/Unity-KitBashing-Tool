using UnityEngine;
using UnityEditor;
using System.IO;


/*
Version 1.0

By: Bradhuxle

How to use:
Select any grouped or single object, hover on the top bar, select tools, click "Export Selected to OBJ".
This will work with any mesh or unity 3D objects. If the object was a parent, it will union all the children inside making it a whole mesh.
Follow my socials for updates and improvements


*/

public class OBJExporter : EditorWindow
{
    [MenuItem("Tools/Export Selected to OBJ")]
    static void ExportSelectedToOBJ()
    {
        if (Selection.activeGameObject == null)
        {
            Debug.LogError("No object selected!");
            return;
        }

        string path = EditorUtility.SaveFilePanel("Save OBJ", "", Selection.activeGameObject.name + ".obj", "obj");
        if (string.IsNullOrEmpty(path)) return;

        MeshFilter[] meshFilters = Selection.activeGameObject.GetComponentsInChildren<MeshFilter>();
        using (StreamWriter sw = new StreamWriter(path))
        {
            int vertexOffset = 0;
            foreach (MeshFilter mf in meshFilters)
            {
                Mesh mesh = mf.sharedMesh;
                if (!mesh) continue;

                foreach (Vector3 v in mesh.vertices)
                    sw.WriteLine($"v {v.x} {v.y} {v.z}");

                foreach (Vector3 n in mesh.normals)
                    sw.WriteLine($"vn {n.x} {n.y} {n.z}");

                foreach (Vector2 uv in mesh.uv)
                    sw.WriteLine($"vt {uv.x} {uv.y}");

                for (int i = 0; i < mesh.subMeshCount; i++)
                {
                    int[] triangles = mesh.GetTriangles(i);
                    for (int t = 0; t < triangles.Length; t += 3)
                    {
                        sw.WriteLine($"f {triangles[t + 0] + 1 + vertexOffset}/{triangles[t + 0] + 1 + vertexOffset}/{triangles[t + 0] + 1 + vertexOffset} " +
                                     $"{triangles[t + 1] + 1 + vertexOffset}/{triangles[t + 1] + 1 + vertexOffset}/{triangles[t + 1] + 1 + vertexOffset} " +
                                     $"{triangles[t + 2] + 1 + vertexOffset}/{triangles[t + 2] + 1 + vertexOffset}/{triangles[t + 2] + 1 + vertexOffset}");
                    }
                }
                vertexOffset += mesh.vertexCount;
            }
        }

        Debug.Log($"Exported {Selection.activeGameObject.name} to {path}");
    }
}
